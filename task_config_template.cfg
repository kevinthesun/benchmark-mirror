[resnet50_cifar10_symbolic]
patterns = ['Speed: (\d+\.\d+|\d+) samples/sec', 'Train-accuracy=(\d+\.\d+|\d+)', 'Time cost=(\d+\.\d+|\d+)']
metrics = ['speed', 'training_acc', 'total_training_time']
compute_method = ['average', 'last', 'total']
command_to_execute = python image_classification/image_classification.py --model resnet50_v1 --dataset cifar10 --mode symbolic --gpus 8 --epochs 20 --log-interval 50
num_gpus = 8

[resnet50_cifar10_hybrid]
patterns = ['Speed: (\d+\.\d+|\d+) samples/sec', 'training: accuracy=(\d+\.\d+|\d+)', 'validation: accuracy=(\d+\.\d+|\d+)', 'time cost: (\d+\.\d+|\d+)']
metrics = ['speed', 'training_acc', 'validation_acc', 'total_training_time']
compute_method = ['average', 'last', 'last', 'total']
command_to_execute = python image_classification/image_classification.py --model resnet50_v1 --dataset cifar10 --mode hybrid --gpus 8 --epochs 20 --log-interval 50
num_gpus = 8

[resnet50_cifar10_imperative]
patterns = ['Speed: (\d+\.\d+|\d+) samples/sec', 'training: accuracy=(\d+\.\d+|\d+)', 'validation: accuracy=(\d+\.\d+|\d+)', 'time cost: (\d+\.\d+|\d+)']
metrics = ['speed', 'training_acc', 'validation_acc', 'total_training_time']
compute_method = ['average', 'last', 'last', 'total']
command_to_execute = python image_classification/image_classification.py --model resnet50_v1 --dataset cifar10 --gpus 8 --epochs 20 --log-interval 50 
num_gpus = 8

[lstm_ptb_imperative]
patterns = ['time cost (\d+\.\d+|\d+)', 'valid loss (\d+\.\d+|\d+)', 'valid ppl (\d+\.\d+|\d+)', 'test loss (\d+\.\d+|\d+)', 'test ppl (\d+\.\d+|\d+)']
metrics = ['total_training_time', 'validation_loss', 'validation_perplexity', 'test_loss', 'test_perplexity']
compute_method = ['total', 'last', 'last', 'last', 'last']
command_to_execute = python word_language_model/word_language_model.py --gpus 8 --nhid 650 --emsize 650 --dropout 0.5 --epochs 40 --data word_language_model/data/ptb. --mode imperative
num_gpus = 8

[lstm_ptb_hybrid]
patterns = ['time cost (\d+\.\d+|\d+)', 'valid loss (\d+\.\d+|\d+)', 'valid ppl (\d+\.\d+|\d+)', 'test loss (\d+\.\d+|\d+)', 'test ppl (\d+\.\d+|\d+)']
metrics = ['total_training_time', 'validation_loss', 'validation_perplexity', 'test_loss', 'test_perplexity']
compute_method = ['total', 'last', 'last', 'last', 'last']
command_to_execute = python word_language_model/word_language_model.py --gpus 8 --nhid 650 --emsize 650 --dropout 0.5 --epochs 40 --data word_language_model/data/ptb. --mode hybrid
num_gpus = 8

[lstm_ptb_symbolic]
patterns = ['Time cost=(\d+\.\d+|\d+)', 'Train-perplexity=(\d+\.\d+|\d+)', 'Validation-perplexity=(\d+\.\d+|\d+)', 'Speed: (\d+\.\d+|\d+) samples/sec']
metrics = ['total_training_time', 'train_perplexity', 'validation_perplexity', 'speed']
compute_method = ['total', 'last', 'last', 'average']
command_to_execute = python word_language_model/lstm_bucketing.py --num-hidden 650 --num-embed 650 --gpus 8 --epochs 25
num_gpus = 8

[tensorflow_resnet50_p3_2xlg]
patterns = ['images/sec: (\d+\.\d+)', 'top_1_accuracy: (\d+\.\d+)']
metrics = ['Images per sec', 'Top 1 accuracy']
compute_method = ['average', 'last']
command_to_execute = python tensorflow_benchmark/tf_cnn_benchmarks/tf_cnn_benchmarks.py --data_name=cifar10 --num_gpus=1 --batch_size=32 --model=resnet50 --variable_update=parameter_server --print_training_accuracy=True
num_gpus = 1

[tensorflow_resnet50_p3_8xlg]
patterns = ['images/sec: (\d+\.\d+)', 'top_1_accuracy: (\d+\.\d+)']
metrics = ['Images per sec', 'Top 1 accuracy']
compute_method = ['average', 'last']
command_to_execute = python tensorflow_benchmark/tf_cnn_benchmarks/tf_cnn_benchmarks.py --data_name=cifar10 --num_gpus=4 --batch_size=32 --model=resnet50 --variable_update=parameter_server --print_training_accuracy=True
num_gpus = 4

[tensorflow_resnet50_p3_16xlg]
patterns = ['images/sec: (\d+\.\d+)', 'top_1_accuracy: (\d+\.\d+)']
metrics = ['Images per sec', 'Top 1 accuracy']
compute_method = ['average', 'last']
command_to_execute = python tensorflow_benchmark/tf_cnn_benchmarks/tf_cnn_benchmarks.py --data_name=cifar10 --num_gpus=8 --batch_size=32 --model=resnet50 --variable_update=parameter_server --print_training_accuracy=True
num_gpus = 8

[tensorflow_resnet152_p3_2xlg]
patterns = ['images/sec: (\d+\.\d+)', 'top_1_accuracy: (\d+\.\d+)']
metrics = ['Images per sec', 'Top 1 accuracy']
compute_method = ['average', 'last']
command_to_execute = python tensorflow_benchmark/tf_cnn_benchmarks/tf_cnn_benchmarks.py --data_name=imagenet --num_gpus=1 --batch_size=32 --model=resnet152 --variable_update=parameter_server --print_training_accuracy=True
num_gpus = 1

[tensorflow_resnet152_p3_8xlg]
patterns = ['images/sec: (\d+\.\d+)', 'top_1_accuracy: (\d+\.\d+)']
metrics = ['Images per sec', 'Top 1 accuracy']
compute_method = ['average', 'last']
command_to_execute = python tensorflow_benchmark/tf_cnn_benchmarks/tf_cnn_benchmarks.py --data_name=imagenet --num_gpus=4 --batch_size=32 --model=resnet152 --variable_update=parameter_server --print_training_accuracy=True
num_gpus = 4

[tensorflow_resnet152_p3_16xlg]
patterns = ['images/sec: (\d+\.\d+)', 'top_1_accuracy: (\d+\.\d+)']
metrics = ['Images per sec', 'Top 1 accuracy']
compute_method = ['average', 'last']
command_to_execute = python tensorflow_benchmark/tf_cnn_benchmarks/tf_cnn_benchmarks.py --data_name=imagenet --num_gpus=8 --batch_size=32 --model=resnet152 --variable_update=parameter_server --print_training_accuracy=True
num_gpus = 8

[tensorflow_resnet50_p3_16xlg_top1_val_batch_1024]
patterns = ['Throughput images/sec: (\d+\.\d+)', 'Total training time: (\d+\.\d+)']
metrics = ['Images per sec', 'Total training time']
compute_method = ['last', 'last']
command_to_execute = ~/tensorpack/examples/ResNet/imagenet-resnet.py --data ~/imagenet/ --gpu 0,1,2,3,4,5,6,7 -d 50 --batch 1024 --max_epoch 70
num_gpus = 8

[tensorflow_resnet50_p3_16xlg_top1_val_batch_512]
patterns = ['Throughput images/sec: (\d+\.\d+)', 'Total training time: (\d+\.\d+)']
metrics = ['Images per sec', 'Total training time']
compute_method = ['last', 'last']
command_to_execute = ~/tensorpack/examples/ResNet/imagenet-resnet.py --data ~/imagenet/ --gpu 0,1,2,3,4,5,6,7 -d 50 --batch 512 --max_epoch 70
num_gpus = 8

[tensorflow_resnet50_p3_16xlg_top1_val_batch_256]
patterns = ['Throughput images/sec: (\d+\.\d+)', 'Total training time: (\d+\.\d+)']
metrics = ['Images per sec', 'Total training time']
compute_method = ['last', 'last']
command_to_execute = ~/tensorpack/examples/ResNet/imagenet-resnet.py --data ~/imagenet/ --gpu 0,1,2,3,4,5,6,7 -d 50 --batch 256 --max_epoch 70
num_gpus = 8

[tensorflow_resnet50_p3_8xlg_top1_val_batch_512]
patterns = ['Throughput images/sec: (\d+\.\d+)', 'Total training time: (\d+\.\d+)']
metrics = ['Images per sec', 'Total training time']
compute_method = ['last', 'last']
command_to_execute = ~/tensorpack/examples/ResNet/imagenet-resnet.py --data ~/imagenet/ --gpu 0,1,2,3 -d 50 --batch 512 --max_epoch 70
num_gpus = 4

[tensorflow_resnet50_p3_8xlg_top1_val_batch_256]
patterns = ['Throughput images/sec: (\d+\.\d+)', 'Total training time: (\d+\.\d+)']
metrics = ['Images per sec', 'Total training time']
compute_method = ['last', 'last']
command_to_execute = ~/tensorpack/examples/ResNet/imagenet-resnet.py --data ~/imagenet/ --gpu 0,1,2,3 -d 50 --batch 256 --max_epoch 70
num_gpus = 4

[tensorflow_resnet50_p3_8xlg_top1_val_batch_128]
patterns = ['Throughput images/sec: (\d+\.\d+)', 'Total training time: (\d+\.\d+)']
metrics = ['Images per sec', 'Total training time']
compute_method = ['last', 'last']
command_to_execute = ~/tensorpack/examples/ResNet/imagenet-resnet.py --data ~/imagenet/ --gpu 0,1,2,3 -d 50 --batch 128 --max_epoch 70
num_gpus = 4
